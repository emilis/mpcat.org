--- requirements ---------------------------------------------------------------

    parser

--- exports --------------------------------------------------------------------

    compileCode

--- js -------------------------------------------------------------------------

function compileCode( code ){
    
    return compileParts( parser.parseString( code ));
}///

function compileParts( parts ){

    var partMap =       parts.reduce( partListToMap, {} );
    var result = {
        css:            partMap.css || "",
        js:             partMap.js || "",
        html:           partMap.html || ""
    };

    if ( partMap.requirements ){
        result.scripts =    parseRequirements( partMap.requirements );
    }

    return result;
}///

function parseRequirements( str ){

    return str.split( "\n" ).map( trim ).filter( isNotEmpty );
}///


function partListToMap( r, part ){

    r[part.partName] =  part.content;
    return r;
}///

function trim( str ){

    return str && str.trim && str.trim() || "";
}///

function isNotEmpty( x ){

    return !!x;
}///
