--- exports --------------------------------------------------------------------

modifiers
rules

--- js -------------------------------------------------------------------------

var modifiers =         "";

var rules = {
    mpcstart:           /^--- [-_a-zA-Z0-9]+ ---+ *[\r\n] *[\r\n]/,
    mpcheader:          /[\r\n] *[\r\n]--- [-_a-zA-Z0-9]+ ---+ *[\r\n] *[\r\n]/,
    catEyes:            /© ©/,

    whitespace:         /[ \t]+/,
    nl:                 /[\r\n]/,
    jst:                /\<%=|\<%-|\<%|%\>/,
    tagOpen:            /\<[hH][1-6]|\<[a-zA-Z]+/,
    tagClose:           /\<\/[hH][1-6]>|\<\/[a-zA-Z]+>/,
    comments:           /\/\*([^\*]|\*[^\/])*(\*\/?)?|(\/\/)[^\r\n]*/,
    strings:            /"(\\.|[^"\r\n])*"?|'(\\.|[^'\r\n])*'?/,
    cssunits:           /\d*\.?\d+(%|px|pt|em|rem)/,
    numbers:            /0x[\dA-Fa-f]+|-?(\d+\.?\d*|\.\d+)/,
    keywords:           /\b(var|let|delete|function|new|return|yield|const|module|if|else|elseif|while|do|for|in|instanceof|switch|case|break|try|catch|throw)\b/,
    jsValues:           /\b(undefined|null|true|false|this|arguments|NaN|Infinity|Object|Function|Array|Number|String|Date|RegExp|Error)\b/,
    domValues:          /[$]|\b(window|document|console|body)\b/,
    text:               /[_a-zA-Z]+/,
    brackets:           /[(){}[\]]+/,
    logic:              /===?|!==?|<=?|>=?|[|&]/,
    assign:             /[-+*]?=/,
    operations:         /[-+*/%:]+/,
    syntax:             /[.,;!?]+/,
    etc:                /\S/
};

--- less -----------------------------------------------------------------------

/// Token highliting:

.ldt > pre {

    .mkColor( @val ){
        color:  darken( saturate( @val, 20% ), 10% );
    }

    @gray:              #494949; /// comments
    @white:             #f8f8f8; /// text, brackets
    @green:             #8f9d6a; /// strings
    @red:               #cf6a4c; /// numbers, constants
    @blue:              #7587a6; /// this
    @magenta:           #9b859d; /// document

    @brown9:            #9b703f; /// fnName, Date
    @browna:            #ac885b; /// boilerprate tags
    @yellowc:           #cda869; /// while $ + =
    @yellowe:           #e0c589; /// tags
    @yellowf:           #f9ee98; /// function var

/*
    @yellow:            desaturate( yellow, 50% );
    @green:             #5a0; 
    @cyan:              darken( cyan, 30% );
    @blue:              desaturate( lighten( blue, 20% ), 50% );
    @magenta:           desaturate( magenta, 70% );
    @red:               desaturate( red, 40% );
    @orange:            #f62;
    @brown:             desaturate( darken( #f82, 30% ), 50% );
    @gray:              darken( white, 60% );
*/
    @cateyes:           #360;

    .mkColor( @white );

    > .mpcstart {       .mkColor(   @yellowe );}

    > .mpcheader,
    > .tagOpen,
    > .tagClose,
    > .jst,
    > .brackets {       .mkColor(   @brown9 );}

    > .strings {        .mkColor(   @green );}
    > .numbers,
    > .cssunits {       .mkColor(   @red );}

    > .keywords {       .mkColor(   @yellowf );}
    > .assign {         .mkColor(   @yellowf );}
    > .jsValues {       .mkColor(   @blue );}
    > .domValues {      .mkColor(   @magenta );}

    > .logic {          .mkColor(   @yellowc );}
    > .operations {     .mkColor(   @yellowc );}
    > .syntax {         .mkColor(   @brown9 );}

    > .comments {       .mkColor(   @gray );}

    > .catEyes {        color:      @cateyes; }
    
    /*  For debugging:

    > .whitespace {     background: #000; }
    > .etc {            background: @magenta; }
    //*/
}
